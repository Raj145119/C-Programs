#include<stdio.h>
#include<conio.h>
#include<malloc.h>
struct node
{
    int data;
    struct node *pre;
    struct node *next;
};
struct node *root;
void delete1(int item)
{
	struct node *temp,*p;
	p=root;
	while(p!=NULL)
	{
		if(
	}
}
void createnode(int item)
{
    struct node *temp,*p;
    temp=(struct node *)malloc(sizeof(struct node));
    temp->data=item;
    temp->next=NULL;
    temp->pre=NULL;
    if(root==NULL){
	root=temp;
	return;
    }
    p=root;
    if(p->data>temp->data){
	if(p->pre==NULL){
	    p->pre=temp;
	    return;
	}
    }
    else{
	if(p->next==NULL){
	    p->next=temp;
	    return;
	}
    }
    while((p->next!=NULL)||(p->pre!=NULL)){
   // if(p->next!=NULL||)
   // {
	if(p->data>temp->data){
	    p=p->pre;
	}
	else{
	    p=p->next;
	}

    }
    if(p->data>temp->data){
	p->pre=temp;
    }else{
	p->next=temp;
    }
}
/*
void insert(struct node **q,int num)
{
    struct node *temp;
    if(*q==NULL){
	temp=(struct node *)malloc(sizeof(struct node));
	temp->data=num;
	temp->next=NULL;
	temp->pre=NULL;
    }
    else{
	if((*q)->data>num)
	    insert((*q)->pre,num);
	else
	    insert((*q)->next,num);
    }
}*/
void search(int item)
{
    struct node *p;
    p=root;
    if(p->data==item){
	printf("FOUNDED DATA=%d",p->data);
	return;
    }
    else{
	while(p->next!=NULL||p->pre!=NULL){


	    if(p->data>item){
		p=p->pre;
	    }
	    else{
		p=p->next;
	    }
	    if(p->data==item){
		 printf("FOUNDED DATA=%d",p->data);
		 return;
	    }

	}
    }
}
/*void search(struct node **q,int item)
{
    struct node *p;
    p=*q;
    if(p->data==item){
	printf("DATA=%d",p->data);
	return;
    }
    else{
	while(p->next!=NULL){


	    if(p->data>item){
		p=p->pre;
	    }
	    else{
		p=p->next;
	    }
	    if(p->data==item){
		 printf("FOUNDED DATA=%d",p->data);
		 return;
	    }

	}
    }
}*/
void dis_inorder(struct node *p)
{
    /*if(p->pre)
	dis_inorder(p->pre);
	printf("Data =%d\n",p->data);
    if(p->next)
	dis_inorder(p->next);   */
	if(p==NULL)
	return;
	dis_inorder(p->pre);
	printf("\n%d",p->data);
	dis_inorder(p->next);
}
void main()
{
    int item,n,i;
    //struct node *s;
    //s=NULL;
    root=NULL;
    clrscr();
    printf("enter the no of node to be create\n");
    scanf("%d",&n);
    for(i=0;i<n;i++){
	printf("Enter the %d data \n",i+1);
	scanf("%d",&item);

	createnode(item);
      //  insert(&s,data);
    }
    dis_inorder(root);
    printf("\nEnter the data for search in tree\n");
    scanf("%d",&item);
    search(item);
    getch();
    //search(&s,data);
}
